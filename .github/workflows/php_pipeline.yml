name: Pull Request Validation Pipeline

on:
  pull_request:
    branches:
      - security-pipeline
    types: [opened, synchronize, reopened]

jobs:
  validate:
    name: Pull Request Validation
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all commit history is fetched

      # Step 2: Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      # Step 3: Install Composer Dependencies
      - name: Install Composer Dependencies
        run: composer install --no-dev --optimize-autoloader

      # Step 4: Run SonarQube Scan
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to fetch PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Step 5: Wait for SonarQube Quality Gate
      - name: Wait for Quality Gate
        id: sonar
        uses: sonarsource/sonarqube-quality-gate-action@v2.2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Step 6: Lint the PHP Code
      - name: Run PHP Lint
        run: php -l index.php

      # Step 7: Run PHP Unit Tests (if any)
      - name: Run Tests
        run: |
          if [ -d tests ]; then
            ./vendor/bin/phpunit --configuration phpunit.xml
          else
            echo "No tests found, skipping."
          fi

      # Step 8: Fail the pipeline if Quality Gate is not passed
      - name: Check Quality Gate Result
        run: |
          if [ "${{ steps.sonar.outputs.quality_gate_status }}" != "PASSED" ]; then
            echo "SonarQube Quality Gate failed. Please address the issues."
            exit 1
          else
            echo "SonarQube Quality Gate passed."
          fi
